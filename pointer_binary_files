#include <iostream>
#include <fstream>
#include <cmath>
const float pi = 3.141592;
using namespace std;
int main() {
	// 표
	char header[12];
	int* n; n = (int*)header; *n = 100;
	float* f; f = (float*)(header + 4); *f = 200;
	short* a; a = (short*)(header + 8); *a = 5000;
	short* p; p = (short*)(header + 10); *p = 5;
	// a.dat파일 쓰기
	ofstream aa("a.dat", ios::binary | ios::out);
	if (!aa) return 666;
	aa.write(header, 12 * sizeof(char));
	aa.close();
	//a.dat파일 읽기
	ifstream aaa("a.dat", ios::binary | ios::in);
	if (!aaa) return 667;
	aaa.read(header, sizeof(char) * 12);
	aaa.close();
	//f=400 변경 후 f 확인 및 계산 및 samples 생성
	f = (float*)(header + 4);
	*f = 400;  cout << "f of b.dat :  " << *f << endl;
	short* data; data = new short[*n+1];
	float dt = 1 / (*f * 10);
	for (int i = 0; i < *n+1; i++) {
		data[i] = (short)(*a * sin(2.0 * pi * f[0] * i * dt));
	}
	//b.dat파일 쓰기
	ofstream bb("b.dat", ios::binary | ios::out);
	if (!bb) return 668;
	bb.write(header, sizeof(char) * 12);
	bb.write((char*)data, (*n+1)*sizeof(short));
	bb.close();
	//f=200 변경 후 f 확인 및 계산
	*f = 200; 
	dt = 1 / (*f * 20); cout << "f of a.dat: " << *f << endl;
	for (int i = 0; i < *n+1; i++) {
		data[i] = (short)(*a * sin(2.0 * pi * f[0] * i * dt));
	}
	// a.dat samples 추가
	ofstream xx("a.dat", ios::binary | ios::out);
	if (!xx) return 669;
	xx.write(header, 12 * sizeof(char));
	xx.write((char*)data, (*n+1)*sizeof(short));
	xx.close();
	// a.dat과 b.dat 읽기
	short* data1; data1 = new short[*n+7];
	short* data2; data2 = new short[*n+7];
	ifstream yy("a.dat", ios::binary | ios::in);
	if (!yy) return 670;
	yy.read((char*)data1, (*n+7)*sizeof(short));
	yy.close();
	ifstream zz("b.dat", ios::binary | ios::in);
	if (!zz) return 671;
	zz.read((char*)data2, (*n+7)*sizeof(short));
	zz.close();
	//c.txt 만들기
	ofstream ww("c.txt");
	if (!ww) return 672;
	for (int i = 0; i < *n+7; i++) {
		ww << i * dt -6*dt << "  " << data1[i] << "  " << data2[i] << endl;
	}
	ww.close();


}
